# -*- coding: utf-8 -*-
"""Examen del primer parcial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QKaUrQ_L7vEtOoF94gsHG1GiCGqAkjeL
"""

import numpy as np

# Importante: verifica que tu nombre y número de matrícula esten correctos
nombre = "María Jaqueline Romero García"
numero_de_matricula = 173846
fecha = '2025-02-26'

"""1.   El 30 de junio de 1992, la capitalización de mercados de valores del Pacífico y Asia fue:

País |  Capitalización (en miles de millones de dólares)
-----|---------------------------------------------------
Filipinas | 17
Indonesia | 21
Tailandia | 44
Singapur | 50
Malasia | 79
Corea del Sur | 86
Taiwan | 140
Hong Kong | 178
Australia | 203

* a) Encuentre la media aritmética de los datos
* b) Encuentre la mediana de los datos
* c) Encuentre la desviación estándar de los datos

regrese una tupla en el siguiente orden:
(media, mediana, desv_est)
"""

def capitalizacion():

    capitalizaciones = [17, 21, 44, 50, 79, 86, 140, 178, 203]

    media = np.mean(capitalizaciones)
    mediana = np.median(capitalizaciones)
    desviacionstd = np.std(capitalizaciones)

    return(media, mediana, desviacionstd)

capitalizacion()

"""2.    La aistencia a los 10 últimos partidos en casa de las Águilas de Baltimore fue la siguiente:



20100, 24500, 31600, 28400, 49500, 19350, 25600, 30600, 11300, 28560


Calcule el rango, la varianza y la desviación stándard para estos datos

Regrese una tupla con el siguiente orden:

(rango, varianza, desv_est)
"""

def asistencia_dispersion():

    asis  = [20100, 24500, 31600, 28400, 49500, 19350, 25600, 30600, 11300, 28560]

    maximo = np.max(asis)
    minimo = np.min(asis)
    rango = maximo - minimo
    varianza = np.var(asis)
    desviacionstd = np.std(asis)

    return(rango, varianza, desviacionstd)

asistencia_dispersion()

"""3.    Genere un histograma de las siguientes calificaciones en el examen parcial:

7.9, 7.8, 7.8, 6.7, 7.6, 8.7, 8.5, 7.3, 6.6, 9.9, 8.4, 7.2, 6.6, 5.7, 9.4, 8.4, 7.2, 6.3, 5.1, 4.8, 5.0, 6.1, 7.1, 8.2, 9.3, 10.0, 8.9

Nota: regrese el histograma generado con la función de numpy con 10 bins, no genere la gráfica
"""

def histograma_np():

    calif = [7.9, 7.8, 7.8, 6.7, 7.6, 8.7, 8.5, 7.3, 6.6, 9.9, 8.4, 7.2, 6.6, 5.7, 9.4, 8.4, 7.2, 6.3, 5.1, 4.8, 5.0, 6.1, 7.1, 8.2, 9.3, 10.0, 8.9]

    hist = np.histogram(calif, bins=10)

    return hist

histograma_np()

"""4.    Analiza la correlación entre los datos de Tamaño y Precio y

Regresa el coeficiente de Pearson


   Tamaño (m²) | Precio (MXN)
   ------------|------------
          100  |    1305710
          120  |    1658277
          140  |    1894167
          160  |    2136552
          180  |    2298267
          200  |    2553624
          220  |    2780503
          240  |    3289726
          260  |    3472743
          280  |    3779477
"""

def correlacion():
    tamanio = [100, 120, 140, 160, 180, 200, 220, 240, 260, 280]
    precio = [1305710, 1658277, 1894167, 2136552, 2298267, 2553624, 2780503, 3289726, 3472743, 3779477]

    correlacion_matrix = np.corrcoef(tamanio, precio)
    coef_correlacion = correlacion_matrix[0, 1]

    return coef_correlacion

correlacion()

"""5.        La tienda de departamentso Friendly ha sido objeto de muchos robos durante el último mes; pero debido al aumento a las medidas de seguridad, se han detenido 250 ladrones. Se registró el sexo de cada ladrón; también se anotó si se trataba de un primer delito o era reincidente. Los datos se resumen en la siguiente tabla.

Sexo | Primera ofensa | Reincidente
-----|----------------|------------
Hombre | 60 | 70
Mujer | 44 | 76

Suponga que se selecciona al azar un ladrón detenido, calcule
* la probabilidad de que el ladrón sea hombre: p_hombre
* la probabilidad de que sea la primera ofensa, dado que es hombre: p_po_hombre

Regrese ambos datos en una tupla con el siguiente orden
(p_hombre, p_po_hombre)
"""

def probabilidad_condicional():

    p_hombre = (60 + 70) / (60 + 70 + 44 + 76)
    p_po_hombre = 60 / (60 + 70)

    return(p_hombre, p_po_hombre)

probabilidad_condicional()

"""Contesta las siguientes preguntas

Definición del Problema:

6.     ¿Cuál es el problema específico que se desea resolver con la minería de datos?
7.     ¿Por qué es importante resolver este problema?

Objetivos del Proyecto:

8.     ¿Cuáles son los objetivos principales del anteproyecto?
9.     ¿Qué resultados esperas obtener al final del proyecto?

Recolección de Datos:

10.    ¿Qué tipo de datos se necesitarán para este proyecto?

Regresa cadenas de texto con tu respuesta.
"""

def problema_especifico():
    return '''Conocer las causas de abandono escolar en la universidad.
    ¿Porque?, ¿Hay relación entre la causa y el rendimiento academico del alumno?
    ¿Podemos predecir cuando un alumno va a abandonar la universidad? ¿Hay relación
    entre la materia y el rendimiento academico?
    '''

problema_especifico()

def importancia():
    res = '''Quizá con un análisis de estos datos se podrian tomar medidas en
    cuanto a que materias son las más conflictivas para brindar apoyo a los alumnos
    Anticipar cuando un alumno esta en peligro de abandonar la universidad para tomar su caso,
    analizarlo y evitar que suceda.
    '''
    return res

importancia()

def objetivos():
    res = '''Objetivos: Análizar las relaciones entre el abandono academico y el rendimiento academico,
    motivos personales, etc.

    Resultados: Conocer las causas de abandono escolar en la universidad de manera que se pueda predecir un posible abandono y evitarlo.
    usar los datos recolectados para tomar decisiones informadas.
    '''
    return res

objetivos()

def tipo_de_datos():
    res = '''Historiales academicos actuales, pasados y principalmente de aquellos que hayan abandonado la universidad.
    Encuestas dirigidad a la comunidad en general para ver porque se da el abandono o porque abandonarian
    la universidad.
    '''
    return res

tipo_de_datos()
